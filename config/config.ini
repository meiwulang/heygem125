# =============================================================
#         数字人合成服务 - 主配置文件 (附调优指南)
# =============================================================
#
# 说明:
# 1. 本文件是服务的唯一控制中心，所有可调参数均在此定义。
# 2. 修改后需要重启服务才能生效。
# 3. 对于路径配置，建议使用相对路径(`./`)以便项目迁移。
#
# =============================================================

[service]
# --- API 服务配置 ---
host = 0.0.0.0
# 影响: API服务监听的IP地址。`0.0.0.0`表示允许从任何网络接口访问。
port = 8383
# 影响: API服务监听的端口号。确保此端口未被其他程序占用。


# =============================================================
#                           路径配置
# =============================================================

[paths]
# 各个根目录
data_root = ./data
# 【核心修改】models_root 现在可以指向根目录，或者任何您想放模型的地方
models_root = ./
assets_root = ./assets

# 动态数据目录 (基于 data_root)
log_dir = %(data_root)s/logs/
result_dir = %(data_root)s/results/
temp_dir = %(data_root)s/temp/
cache_dir = %(data_root)s/cache/
debug_dir = %(data_root)s/debug/

# 模型文件路径
# 【核心修改】直接从项目根目录开始指定wenet的路径
face_detect_resources = face_detect_utils/resources/
head_pose_model = face_detect_utils/resources/model_float32.onnx

wenet_config_path = wenet/examples/aishell/aidata/conf/train_conformer_multi_cn.yaml
wenet_model_path = wenet/examples/aishell/aidata/exp/conformer/wenetmodel.pt

# --- 静态资源路径 (基于 assets_root) ---
# 不常变动的文件，如水印、logo等。
watermark_path = %(assets_root)s/watermark.png
digital_auth_path = %(assets_root)s/auth_logo.png
dummy_audio_path = %(assets_root)s/dummy_silent.wav


# =============================================================
#                       性能与资源配置
# =============================================================

[performance]
# --- 批处理大小 (Batch Size) ---
# 这是影响GPU性能和显存占用的最核心参数。
synthesis_batch_size = 15
# 定义: 合成视频时，每次送入GPU进行推理的帧数。
# 影响:
#   - [增大]:
#     + 大幅提升GPU处理效率(FPS)，减少单帧处理的平均开销。
#     + 显著增加显存(VRAM)占用。
#     + 调优建议: 对于高端显卡(如4090)，应尽量增大此值(如128, 256)，直到显存占用达到70-80%，以最大化吞吐量。
#   - [减小]:
#     + 降低显存占用，适用于显存较小的显卡。
#     + 降低GPU处理效率，总处理时间会变长。

preprocess_batch_size = 100
# 定义: 首次预处理视频(提取3DMM)时，每次送入GPU的帧数。
# 影响:
#   - [增大]:
#     + 加快新视频的首次预处理速度。
#     + 增加预处理时的峰值显存占用。
#   - [减小]:
#     + 降低预处理时的显存压力。


[workers]
# --- 工作进程数量 ---
# 定义了服务启动的并行进程数，直接影响并发处理能力。
num_gpus = 1
# 定义: 用于视频合成的GPU工作进程数量。
# 影响:
#   - 应设置为您服务器上可用的NVIDIA显卡数量。
#   - 设置为2，将启动两个独立的GPU worker，分别在`cuda:0`和`cuda:1`上工作，并发处理能力翻倍。
#   - 如果设置为1，则只有一张卡会工作。

num_preprocess_workers = 1
# 定义: 负责处理新视频“预处理/训练”任务的CPU进程数量。
# 影响:
#   - [增大]: 可以同时接收和处理更多个新视频的预处理请求。
#   - [减小]: 如果不常有新视频加入，1或2即可，避免不必要的CPU资源占用。

num_synthesis_prep_workers = 1
# 定义: 负责“合成任务准备”(下载、音频处理)的CPU进程数量。这些进程是为GPU“喂数据”的。
# 影响:
#   - [增大]:
#     + 提高为GPU准备数据的速度，当GPU数量多、速度快时，必须增加此值，否则GPU会“挨饿”，导致性能瓶颈。
#     + 会增加CPU和内存的使用。
#     + 调优建议: 此值通常应为`num_gpus`的2到4倍。对于2张4090，6到8是合理的值。
#   - [减小]:
#     + 可能导致GPU空闲等待，降低系统总吞吐量。


[queues]
# --- 进程间通信队列容量 ---
# 定义了数据流水线中的“缓冲区”大小，影响系统的稳定性和平滑度。
preprocess_request_queue_size = 20
# 定义: 接收“预处理”任务的入口队列容量。
# 影响: 系统能瞬间接收并缓存的最大新视频处理请求数。一般100足够。

synthesis_request_queue_size = 100
# 定义: 接收“合成”任务的入口队列容量。
# 影响: 系统能瞬间接收并缓存的最大视频合成请求数。一般100足够。

ready_queue_factor = 30
# 定义: “准备就绪”队列容量的计算因子。最终容量 = `num_synthesis_prep_workers` * `ready_queue_factor`。
# 影响:
#   - [增大]: 允许CPU准备工作大幅领先GPU，形成更大的任务缓冲区，应对GPU处理速度波动。
#   - [减小]: 缓冲区变小，对流水线各环节速度匹配度要求更高。

gpu_pipeline_queue_factor = 30
# 定义: GPU处理流水线中队列(chunk_queue, writer_command_queue)的容量因子。最终容量 = `num_gpus` * `gpu_pipeline_queue_factor`。
# 影响:
#   - [增大]: 这是最重要的缓冲区。能有效吸收GPU处理速度的波动和多GPU任务的乱序到达，让视频写入更平滑。对于高速GPU，此值应较大。
#   - [减小]: 可能导致GPU因下游阻塞而暂停，或视频写入器因数据未及时到达而空等。
# 作用: 这是最关键的缓冲区，连接“帧分发器”和两张4090 GPU (chunk_queue)，以及连接GPU和视频写入器 (writer_command_queue)。
# 分析:
# 您的GPU处理速度极快，批处理大小也很大（synthesis_batch_size = 128）。
# “帧分发器”是一个单进程，它需要不断地从内存中合成数据块并放入 chunk_queue。
# 两张GPU会疯狂地从 chunk_queue 中抢夺任务。
# 为了让帧分发器可以领先GPU几个身位，并且为了吸收两张GPU完成任务的乱序性，这个队列必须足够大。


result_queue_size = 40
# 定义: 最终结果队列的容量。
# 影响: 系统能缓存的最大已完成任务的结果数。一般100足够。


# =============================================================
#                        算法与处理配置
# =============================================================

[processing]
blend_dynamic = xseg
# 定义: 数字人模型的口型区域融合算法。可选 'xseg' 或 'lmk'。
# 影响: 改变最终生成视频的口型和下巴区域的融合效果和自然度。

blur_threshold = 0.6
# 定义: 判断是否需要对人脸进行“超分”的模糊度阈值。
# 影响:
#   - [增大]: 更难触发超分，只有非常模糊的人脸才会被处理。
#   - [减小]: 更容易触发超分，即使轻微模糊也可能被处理，会增加整体处理时间。

ffmpeg_crf = 18
# 定义: FFMPEG合成视频时的质量参数 (Constant Rate Factor)。
# 影响:
#   - [减小] (如 15): 视频质量极高，文件体积巨大。
#   - [增大] (如 24): 视频质量下降，有可见压缩痕迹，但文件体积小。
#   - 调优建议: 18是视觉质量和文件大小的绝佳平衡点。20-22是更注重文件大小的选择。

std_face_crop_size = 256
# 定义: 在预处理阶段，从原图中裁剪出的人脸会被统一缩放到的标准尺寸。
# 影响: 这是模型输入的一部分，通常不建议修改，除非你重新训练了模型。

chaofen_before = false
chaofen_after = false
# 定义: 是否启用前置/后置超分（旧版功能）。
# 影响: 在当前架构下，这些参数可能已被新的逻辑取代，但保留以作兼容。


# =============================================================
#                           功能开关
# =============================================================

[flags]
# --- 开关 (true/false) ---
enable_debug_save = false
# 定义: 是否保存任务处理过程中的中间调试图片到`debug_dir`。
# 影响:
#   - [true]: 会产生大量中间图片，占用大量磁盘空间，但非常有助于调试算法问题。
#   - [false]: 生产环境应设为false，以保证性能和节省空间。

temp_clean_switch = true
# 定义: 任务处理完成后，是否自动删除`temp_dir`中的临时文件。
# 影响:
#   - [true]: 生产环境应设为true，自动清理，防止磁盘被占满。
#   - [false]: 调试时可设为false，以检查任务失败后留下的临时文件。


# =============================================================
#                        服务注册 (可选)
# =============================================================

[register]
url = http://172.16.160.51:12120
report_interval = 10
enable = false

[obs]
# 阿里云 AccessKey ID
access_key_id = 

# 阿里云 AccessKey Secret
secret_access_key = 

# OSS Endpoint (访问域名)
obs_server =

# Bucket Name (存储空间名称)
bucket = 